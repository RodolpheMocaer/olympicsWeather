print(graphique_temperature)
print(graphique_precipitations)
# Graphique linéaire de la precipitations
graphique_precipitations <- ggplot(résultats, aes(x = `heure au tz UTC`, y = `precipitation en mm`)) +
geom_line(color = "green", size = 1) +
labs(title = "Précipitations au fil du temps", x = "Heure (UTC)", y = "Précipitations (mm)") +
theme_minimal()
# Graphique linéaire pour la température et la température ressentie
graphique_temperature <- ggplot(résultats, aes(x = `heure au tz UTC`)) +
geom_line(aes(y = `données de température`, color = "Température"), size = 1) +
geom_line(aes(y = `données de température ressentie`, color = "Température ressentie"), size = 1) +
labs(title = "Température au fil du temps", x = "Heure (UTC)", y = "Température (°C)") +
scale_color_manual(values = c("Température" = "red", "Température ressentie" = "orange"))
# Afficher les graphiques
print(graphique_proba_pluie)
print(graphique_temperature)
print(graphique_precipitations)
# Graphique linéaire de la precipitations
graphique_precipitations <- ggplot(résultats, aes(x = `heure au tz UTC`, y = `precipitation en mm`)) +
geom_line(color = "#006666", size = 1) +
labs(title = "Précipitations au fil du temps", x = "Heure (UTC)", y = "Précipitations (mm)") +
theme_minimal()
# Graphique de la probabilité de pluie en barres
graphique_proba_pluie <- ggplot(résultats, aes(x = `heure au tz UTC`, y = `probabilité de pluie`)) +
geom_bar(stat = "identity", fill = "#003366", alpha = 0.7) +
labs(title = "Probabilité de pluie au fil du temps", x = "Heure (UTC)", y = "Probabilité de pluie (%)") +
theme_minimal()
# Graphique linéaire de la precipitations
graphique_precipitations <- ggplot(résultats, aes(x = `heure au tz UTC`, y = `precipitation en mm`)) +
geom_line(color = "#006666", size = 1) +
labs(title = "Précipitations au fil du temps", x = "Heure (UTC)", y = "Précipitations (mm)") +
theme_minimal()
# Graphique linéaire pour la température et la température ressentie
graphique_temperature <- ggplot(résultats, aes(x = `heure au tz UTC`)) +
geom_line(aes(y = `données de température`, color = "Température"), size = 1) +
geom_line(aes(y = `données de température ressentie`, color = "Température ressentie"), size = 1) +
labs(title = "Température au fil du temps", x = "Heure (UTC)", y = "Température (°C)") +
scale_color_manual(values = c("Température" = "#FF3333", "Température ressentie" = "#FF6633"))
# Afficher les graphiques
print(graphique_proba_pluie)
print(graphique_temperature)
print(graphique_precipitations)
# Graphique linéaire de la precipitations
graphique_precipitations <- ggplot(résultats, aes(x = `heure au tz UTC`, y = `precipitation en mm`)) +
geom_line(color = "#33CCCC", size = 1) +
labs(title = "Précipitations au fil du temps", x = "Heure (UTC)", y = "Précipitations (mm)") +
theme_minimal()
# Graphique linéaire de la precipitations
graphique_precipitations <- ggplot(résultats, aes(x = `heure au tz UTC`, y = `precipitation en mm`)) +
geom_line(color = "#33CCCC", size = 1) +
labs(title = "Précipitations au fil du temps", x = "Heure (UTC)", y = "Précipitations (mm)") +
theme_minimal()
# Graphique linéaire pour la température et la température ressentie
graphique_temperature <- ggplot(résultats, aes(x = `heure au tz UTC`)) +
geom_line(aes(y = `données de température`, color = "Température"), size = 1) +
geom_line(aes(y = `données de température ressentie`, color = "Température ressentie"), size = 1) +
labs(title = "Température au fil du temps", x = "Heure (UTC)", y = "Température (°C)") +
scale_color_manual(values = c("Température" = "#FF3333", "Température ressentie" = "#FF6600"))
# Afficher les graphiques
print(graphique_proba_pluie)
print(graphique_temperature)
print(graphique_precipitations)
library(gridExtra)
library(ggplot2)
# Combinaison des 2
figure_combinée <- grid.arrange(graphique_proba_pluie, graphique_precipitations, ncol = 1)
graphique_combiné <- ggplot(résultats, aes(x = `heure au tz UTC`)) +
geom_bar(aes(y = `probabilité de pluie`), stat = "identity", fill = "#003366", alpha = 0.7) +
geom_line(aes(y = `precipitation en mm`), color = "#33CCCC", size = 1) +
labs(title = "Probabilité de pluie et Précipitations au fil du temps", x = "Heure (UTC)", y = "Probabilité de pluie (%) / Précipitations (mm)") +
scale_y_continuous(sec.axis = sec_axis(~., name = "Précipitations (mm)")) +
theme_minimal()
# Afficher le graphique combiné
print(graphique_combiné)
graphique_combiné <- ggplot(résultats, aes(x = `heure au tz UTC`)) +
geom_bar(aes(y = `probabilité de pluie`), stat = "identity", fill = "#003366", alpha = 0.7) +
geom_line(aes(y = `precipitation en mm`), color = "#33CCCC", size = 1) +
labs(title = "Probabilité de pluie et Précipitations au fil du temps", x = "Heure (UTC)", y = "Probabilité de pluie (%) / Précipitations (mm)") +
scale_y_continuous(name = "Probabilité de pluie (%)") +
scale_y_continuous(sec.axis = sec_axis(trans = ~., name = "Précipitations (mm)")) +
theme_minimal()
# Afficher le graphique combiné
print(graphique_combiné)
graphique_combiné <- ggplot(résultats, aes(x = `heure au tz UTC`)) +
geom_bar(aes(y = `probabilité de pluie`), stat = "identity", fill = "#003366", alpha = 0.7) +
geom_line(aes(y = `precipitation en mm`), color = "#33CCCC", size = 1) +
labs(title = "Probabilité de pluie et Précipitations au fil du temps", x = "Heure (UTC)", y = "Probabilité de pluie (%) / Précipitations (mm)") +
scale_y_continuous(name = "Probabilité de pluie (%)") +
scale_y_continuous(sec.axis = sec_axis(trans = ~., name = "Précipitations (mm)", breaks = seq(0, max(résultats$`precipitation en mm`), by = 0.2), limits = c(0, max(résultats$`precipitation en mm`)))) +
theme_minimal()
# Afficher le graphique combiné
print(graphique_combiné)
graphique_combiné <- ggplot(résultats, aes(x = `heure au tz UTC`)) +
geom_bar(aes(y = `probabilité de pluie`), stat = "identity", fill = "#003366", alpha = 0.7) +
geom_line(aes(y = `precipitation en mm`), color = "#33CCCC", size = 1) +
labs(title = "Probabilité de pluie et Précipitations au fil du temps", x = "Heure (UTC)", y = "Probabilité de pluie (%) / Précipitations (mm)") +
scale_y_continuous(name = "Probabilité de pluie (%)") +
scale_y_continuous(sec.axis = sec_axis(trans = ~., name = "Précipitations (mm)", breaks = seq(0, max(résultats$`precipitation en mm`), by = 0.2))) +
theme_minimal()
# Afficher le graphique combiné
print(graphique_combiné)
graphique_combiné <- ggplot(résultats, aes(x = `heure au tz UTC`)) +
geom_bar(aes(y = `probabilité de pluie`), stat = "identity", fill = "#003366", alpha = 0.7) +
geom_line(aes(y = `precipitation en mm` / proportion_echelle), color = "#33CCCC", size = 1) +
labs(title = "Probabilité de pluie et Précipitations au fil du temps", x = "Heure (UTC)", y = "Probabilité de pluie (%) / Précipitations (mm)") +
scale_y_continuous(name = "Probabilité de pluie (%)", limits = c(0, 100)) +
scale_y_continuous(
name = "Précipitations (mm)",
sec.axis = sec_axis(
~.*proportion_echelle,
name = "Précipitations (mm)",
breaks = seq(0, max_precipitations, by = 0.2),
labels = seq(0, max_precipitations, by = 0.2)
)
) +
theme_minimal()
# Afficher le graphique combiné
print(graphique_combiné)
max_precipitations <- max(résultats$`precipitation en mm`)
# Calculer la proportion d'échelle entre l'axe principal et l'axe secondaire
proportion_echelle <- max_precipitations / 100
graphique_combiné <- ggplot(résultats, aes(x = `heure au tz UTC`)) +
geom_bar(aes(y = `probabilité de pluie`), stat = "identity", fill = "#003366", alpha = 0.7) +
geom_line(aes(y = `precipitation en mm` / proportion_echelle), color = "#33CCCC", size = 1) +
labs(title = "Probabilité de pluie et Précipitations au fil du temps", x = "Heure (UTC)", y = "Probabilité de pluie (%) / Précipitations (mm)") +
scale_y_continuous(name = "Probabilité de pluie (%)", limits = c(0, 100)) +
scale_y_continuous(
name = "Précipitations (mm)",
sec.axis = sec_axis(
~.*proportion_echelle,
name = "Précipitations (mm)",
breaks = seq(0, max_precipitations, by = 0.2),
labels = seq(0, max_precipitations, by = 0.2)
)
) +
theme_minimal()
# Afficher le graphique combiné
print(graphique_combiné)
résultats <- get_forecast("Brest, France ")
# Graphique de la probabilité de pluie en barres
graphique_proba_pluie <- ggplot(résultats, aes(x = `heure au tz UTC`, y = `probabilité de pluie`)) +
geom_bar(stat = "identity", fill = "#003366", alpha = 0.7) +
labs(title = "Probabilité de pluie au fil du temps", x = "Heure (UTC)", y = "Probabilité de pluie (%)") +
theme_minimal()
# Graphique linéaire de la precipitations
graphique_precipitations <- ggplot(résultats, aes(x = `heure au tz UTC`, y = `precipitation en mm`)) +
geom_line(color = "#33CCCC", size = 1) +
labs(title = "Précipitations au fil du temps", x = "Heure (UTC)", y = "Précipitations (mm)") +
theme_minimal()
# Afficher les graphiques
print(graphique_proba_pluie)
print(graphique_precipitations)
graphique_combiné <- ggplot(résultats, aes(x = `heure au tz UTC`)) +
geom_bar(aes(y = `probabilité de pluie`), stat = "identity", fill = "#003366", alpha = 0.7) +
geom_line(aes(y = `precipitation en mm` / proportion_echelle), color = "#33CCCC", size = 1) +
labs(title = "Probabilité de pluie et Précipitations au fil du temps", x = "Heure (UTC)", y = "Probabilité de pluie (%) / Précipitations (mm)") +
scale_y_continuous(name = "Probabilité de pluie (%)", limits = c(0, 100)) +
scale_y_continuous(
name = "Précipitations (mm)",
sec.axis = sec_axis(
~.*proportion_echelle,
name = "Précipitations (mm)",
breaks = seq(0, max_precipitations, by = 0.2),
labels = seq(0, max_precipitations, by = 0.2)
)
) +
theme_minimal()
# Afficher le graphique combiné
print(graphique_combiné)
résultats <- get_forecast("Lille, France ")
# Graphique de la probabilité de pluie en barres
graphique_proba_pluie <- ggplot(résultats, aes(x = `heure au tz UTC`, y = `probabilité de pluie`)) +
geom_bar(stat = "identity", fill = "#003366", alpha = 0.7) +
labs(title = "Probabilité de pluie au fil du temps", x = "Heure (UTC)", y = "Probabilité de pluie (%)") +
theme_minimal()
# Graphique linéaire de la precipitations
graphique_precipitations <- ggplot(résultats, aes(x = `heure au tz UTC`, y = `precipitation en mm`)) +
geom_line(color = "#33CCCC", size = 1) +
labs(title = "Précipitations au fil du temps", x = "Heure (UTC)", y = "Précipitations (mm)") +
theme_minimal()
print(graphique_precipitations)
# Graphique linéaire pour la température et la température ressentie
graphique_temperature <- ggplot(résultats, aes(x = `heure au tz UTC`)) +
geom_line(aes(y = `données de température`, color = "Température"), size = 1) +
geom_line(aes(y = `données de température ressentie`, color = "Température ressentie"), size = 1) +
labs(title = "Température au fil du temps", x = "Heure (UTC)", y = "Température (°C)") +
scale_color_manual(values = c("Température" = "#FF3333", "Température ressentie" = "#FF6600"))
# Afficher les graphiques
print(graphique_proba_pluie)
print(graphique_temperature)
print(graphique_precipitations)
graphique_combiné <- ggplot(résultats, aes(x = `heure au tz UTC`)) +
geom_bar(aes(y = `probabilité de pluie`), stat = "identity", fill = "#003366", alpha = 0.7) +
geom_line(aes(y = `precipitation en mm` / proportion_echelle), color = "#33CCCC", size = 1) +
labs(title = "Probabilité de pluie et Précipitations au fil du temps", x = "Heure (UTC)", y = "Probabilité de pluie (%) / Précipitations (mm)") +
scale_y_continuous(name = "Probabilité de pluie (%)", limits = c(0, 100)) +
scale_y_continuous(
name = "Précipitations (mm)",
sec.axis = sec_axis(
~.*proportion_echelle,
name = "Précipitations (mm)",
breaks = seq(0, max_precipitations, by = 0.2),
labels = seq(0, max_precipitations, by = 0.2)
)
) +
theme_minimal()
# Afficher le graphique combiné
print(graphique_combiné)
#1 FONCTION DE VISUALISATION#
#' Graphique linéaire pour la température et la température ressentie
#'
#' @param resultats Un tibble retourné par la fonction get_forecast
#'
#' @return Un graphique de visualisation de la précipitation en mm et de la probabilité de pluie à un lieu données
#' @export
#' @import ggplot2
#'
#' @examples
visualiser_resultats <- function(resultats) {
resultats$`heure au tz UTC` <- as.POSIXct(resultats$`heure au tz UTC`)
#ECHELLES DES AXES Y#
max_precipitations <- max(resultats$`precipitation en mm`)
proportion_echelle <- max_precipitations / 100
#CREATION DU GRAPHIQUE#
graphique_combiné <- ggplot(resultats, aes(x = `heure au tz UTC`)) +
geom_bar(aes(y = `probabilité de pluie`), stat = "identity", fill = "#003366", alpha = 0.7) +
geom_line(aes(y = `precipitation en mm` / proportion_echelle), color = "#33CCCC", size = 1) +
labs(title = "Probabilité de pluie et Précipitations au fil du temps", x = "Heure (UTC)", y = "Probabilité de pluie (%) / Précipitations (mm)") +
scale_y_continuous(name = "Probabilité de pluie (%)", limits = c(0, 100)) +
scale_y_continuous(
name = "Précipitations (mm)",
sec.axis = sec_axis(
~.*proportion_echelle,
name = "Précipitations (mm)",
breaks = seq(0, max_precipitations, by = 0.2),
labels = seq(0, max_precipitations, by = 0.2)
)
) +
theme_minimal()
}
#1 FONCTION DE VISUALISATION#
#' Graphique linéaire pour la température et la température ressentie
#'
#' @param resultats Un tibble retourné par la fonction get_forecast
#'
#' @return Un graphique de visualisation de la précipitation en mm et de la probabilité de pluie à un lieu données
#' @export
#' @import ggplot2
#'
#' @examples
visualiser_resultats <- function(resultats) {
resultats$`heure au tz UTC` <- as.POSIXct(resultats$`heure au tz UTC`)
#ECHELLES DES AXES Y#
max_precipitations <- max(resultats$`precipitation en mm`)
proportion_echelle <- max_precipitations / 100
#CREATION DU GRAPHIQUE#
graphique_combiné <- ggplot(resultats, aes(x = `heure au tz UTC`)) +
geom_bar(aes(y = `probabilité de pluie`), stat = "identity", fill = "#003366", alpha = 0.7) +
geom_line(aes(y = `precipitation en mm` / proportion_echelle), color = "#33CCCC", size = 1) +
labs(title = "Probabilité de pluie et Précipitations au fil du temps", x = "Heure (UTC)", y = "Probabilité de pluie (%) / Précipitations (mm)") +
scale_y_continuous(name = "Probabilité de pluie (%)", limits = c(0, 100)) +
scale_y_continuous(
name = "Précipitations (mm)",
sec.axis = sec_axis(
~.*proportion_echelle,
name = "Précipitations (mm)",
breaks = seq(0, max_precipitations, by = 0.2),
labels = seq(0, max_precipitations, by = 0.2)
)
) +
theme_minimal() +
guides(
fill = guide_legend(title = "Probabilité de pluie"),
color = guide_legend(title = "Précipitations (mm)")
)
}
visualiser_resultats(résultats)
Print(visualiser_resultats(résultats))
print(visualiser_resultats(résultats))
visualiser_resultats(résultats)
#1 FONCTION DE VISUALISATION#
#' Graphique linéaire pour la température et la température ressentie
#'
#' @param resultats Un tibble retourné par la fonction get_forecast
#'
#' @return Un graphique de visualisation de la précipitation en mm et de la probabilité de pluie à un lieu données
#' @export
#' @import ggplot2
#'
#' @examples
visualiser_resultats <- function(resultats) {
resultats$`heure au tz UTC` <- as.POSIXct(resultats$`heure au tz UTC`)
#ECHELLES DES AXES Y#
max_precipitations <- max(resultats$`precipitation en mm`)
proportion_echelle <- max_precipitations / 100
#CREATION DU GRAPHIQUE#
graphique_combiné <- ggplot(resultats, aes(x = `heure au tz UTC`)) +
geom_bar(aes(y = `probabilité de pluie`), stat = "identity", fill = "#003366", alpha = 0.7) +
geom_line(aes(y = `precipitation en mm` / proportion_echelle), color = "#33CCCC", size = 1) +
labs(title = "Probabilité de pluie et Précipitations au fil du temps", x = "Heure (UTC)", y = "Probabilité de pluie (%) / Précipitations (mm)") +
scale_y_continuous(name = "Probabilité de pluie (%)", limits = c(0, 100)) +
scale_y_continuous(
name = "Précipitations (mm)",
sec.axis = sec_axis(
~.*proportion_echelle,
name = "Précipitations (mm)",
breaks = seq(0, max_precipitations, by = 0.2),
labels = seq(0, max_precipitations, by = 0.2)
)
) +
theme_minimal() +
guides(
fill = guide_legend(title = "Probabilité de pluie"),
color = guide_legend(title = "Précipitations (mm)")
)
return(graphique_combiné)
}
print(visualiser_resultats(résultats))
(visualiser_resultats(résultats))
#1 FONCTION DE VISUALISATION - 1#
#' Graphique représentant la précipitation en mm et la probabilité de pluie
#'
#' @param resultats Un tibble retourné par la fonction get_forecast
#'
#' @return Un graphique de visualisation de la précipitation en mm et de la probabilité de pluie à un lieu données
#' @export
#' @import ggplot2
#'
#' @examples
Graphique_pluie <- function(resultats) {
resultats$`heure au tz UTC` <- as.POSIXct(resultats$`heure au tz UTC`)
#ECHELLES DES AXES Y#
max_precipitations <- max(resultats$`precipitation en mm`)
proportion_echelle <- max_precipitations / 100
#CREATION DU GRAPHIQUE#
graphique_combiné <- ggplot(resultats, aes(x = `heure au tz UTC`)) +
geom_bar(aes(y = `probabilité de pluie`), stat = "identity", fill = "#003366", alpha = 0.7) +
geom_line(aes(y = `precipitation en mm` / proportion_echelle), color = "#33CCCC", size = 1) +
labs(title = "Probabilité de pluie et Précipitations au fil du temps", x = "Heure (UTC)", y = "Probabilité de pluie (%) / Précipitations (mm)") +
scale_y_continuous(name = "Probabilité de pluie (%)", limits = c(0, 100)) +
scale_y_continuous(
name = "Précipitations (mm)",
sec.axis = sec_axis(
~.*proportion_echelle,
name = "Précipitations (mm)",
breaks = seq(0, max_precipitations, by = 0.2),
labels = seq(0, max_precipitations, by = 0.2)
)
) +
theme_minimal() +
guides(
fill = guide_legend(title = "Probabilité de pluie"),
color = guide_legend(title = "Précipitations (mm)")
)
return(graphique_combiné)
}
#1 FONCTION DE VISUALISATION - 1#
#' Graphique représentant la précipitation en mm et la probabilité de pluie en %
#'
#' @param resultats Un tibble retourné par la fonction get_forecast
#'
#' @return Un graphique de visualisation de la précipitation en mm et de la probabilité de pluie à un point/adresse données
#' @export
#' @import ggplot2
#'
Graphique_pluie <- function(resultats) {
resultats$`heure au tz UTC` <- as.POSIXct(resultats$`heure au tz UTC`)
#ECHELLES DES AXES Y#
max_precipitations <- max(resultats$`precipitation en mm`)
proportion_echelle <- max_precipitations / 100
#CREATION DU GRAPHIQUE#
graphique_combiné <- ggplot(resultats, aes(x = `heure au tz UTC`)) +
geom_bar(aes(y = `probabilité de pluie`), stat = "identity", fill = "#003366", alpha = 0.7) +
geom_line(aes(y = `precipitation en mm` / proportion_echelle), color = "#33CCCC", size = 1) +
labs(title = "Probabilité de pluie et Précipitations au fil du temps", x = "Heure (UTC)", y = "Probabilité de pluie (%) / Précipitations (mm)") +
scale_y_continuous(name = "Probabilité de pluie (%)", limits = c(0, 100)) +
scale_y_continuous(
name = "Précipitations (mm)",
sec.axis = sec_axis(
~.*proportion_echelle,
name = "Précipitations (mm)",
breaks = seq(0, max_precipitations, by = 0.2),
labels = seq(0, max_precipitations, by = 0.2)
)
) +
theme_minimal() +
guides(
fill = guide_legend(title = "Probabilité de pluie"),
color = guide_legend(title = "Précipitations (mm)")
)
return(graphique_combiné)
}
#1 FONCTION DE VISUALISATION - 2#
#' Graphique Représentant la température et la température en degrés ccelsius
#'
#' @param resultats Un tibble retourné par la fonction get_forecast
#'
#' @return Un graphique de visualisation de la température et la température en degrés ccelsius à un point/adresse données
#' @export
#' @import ggplot2
#'
Graphique_temperature <- function(resultats) {
resultats$`heure au tz UTC` <- as.POSIXct(resultats$`heure au tz UTC`)
#CREATION DU GRAPHIQUE#
graphique_temp <- ggplot(resultats, aes(x = `heure au tz UTC`)) +
geom_line(aes(y = `données de température`, color = "Température"), size = 1) +
geom_line(aes(y = `données de température ressentie`, color = "Température ressentie"), size = 1) +
labs(title = "Température au fil du temps", x = "Heure (UTC)", y = "Température (°C)") +
scale_color_manual(values = c("Température" = "#FF3333", "Température ressentie" = "#FF6600")) +
theme_minimal()
return(graphique_temp)
}
Graphique_temperature(résultats)
build()
devtools::install()
build()
#1 FONCTION DE VISUALISATION - 1#
#' Graphique représentant la précipitation en mm et la probabilité de pluie en %
#'
#' @param resultats Un tibble retourné par la fonction get_forecast
#'
#' @return Un graphique de visualisation de la précipitation en mm et de la probabilité de pluie à un point/adresse données
#' @export
#' @import ggplot2
#'
Graphique_pluie <- function(resultats) {
resultats$`heure au tz UTC` <- as.POSIXct(resultats$`heure au tz UTC`)
#ECHELLES DES AXES Y#
max_precipitations <- max(resultats$`precipitation en mm`)
proportion_echelle <- max_precipitations / 100
#CREATION DU GRAPHIQUE#
graphique_combiné <- ggplot(resultats, aes(x = `heure au tz UTC`)) +
geom_bar(aes(y = `probabilité de pluie`), stat = "identity", fill = "#003366", alpha = 0.7) +
geom_line(aes(y = `precipitation en mm` / proportion_echelle), color = "#33CCCC", size = 1) +
labs(title = "Probabilité de pluie et Précipitations au fil du temps", x = "Heure (UTC)", y = "Probabilité de pluie (%) / Précipitations (mm)") +
scale_y_continuous(name = "Probabilité de pluie (%)", limits = c(0, 100)) +
scale_y_continuous(
name = "Précipitations (mm)",
sec.axis = sec_axis(
~.*proportion_echelle,
name = "Précipitations (mm)",
breaks = seq(0, max_precipitations, by = 0.2),
labels = seq(0, max_precipitations, by = 0.2)
)
) +
theme_minimal() +
guides(
fill = guide_legend(title = "Probabilité de pluie"),
color = guide_legend(title = "Précipitations (mm)")
)
return(graphique_combiné)
}
#1 FONCTION DE VISUALISATION - 2#
#' Graphique Représentant la température et la température en degrés ccelsius
#'
#' @param resultats Un tibble retourné par la fonction get_forecast
#'
#' @return Un graphique de visualisation de la température et la température en degrés ccelsius à un point/adresse données
#' @export
#' @import ggplot2
#'
Graphique_temperature <- function(resultats) {
resultats$`heure au tz UTC` <- as.POSIXct(resultats$`heure au tz UTC`)
#CREATION DU GRAPHIQUE#
graphique_temp <- ggplot(resultats, aes(x = `heure au tz UTC`)) +
geom_line(aes(y = `données de température`, color = "Température"), size = 1) +
geom_line(aes(y = `données de température ressentie`, color = "Température ressentie"), size = 1) +
labs(title = "Température au fil du temps", x = "Heure (UTC)", y = "Température (°C)") +
scale_color_manual(values = c("Température" = "#FF3333", "Température ressentie" = "#FF6600")) +
theme_minimal()
return(graphique_temp)
}
library(tibble)
library(lubridate)
library(tidygeocoder)
library(leaflet)
library(sf)
library(testthat)
library(devtools)
library(httr2)
library(jsonlite)
build()
build()
document()
document()
build()
devtools::install()
#' @import jsonlite
#' @import tidygeocoder
#'
#' @examples
#' # Exemple d'utilisation :
#'       - resultats_finals <- get_forecast("15 rue louis Gaudin, Nantes,FRANCE")
#'         print(resultats_finals)
#'
#'       - resultats_finals2 <- get_forecast(c(37.7749, -122.4194))
#'         print(resultats_finals2)
get_forecast <- function(x) {
if (is.numeric(x)) {
get_forecast.numeric(x)
} else if (is.character(x)) {
get_forecast.character(x)
} else {
stop("L'argument doit être de type numeric (coordonnées) ou character (adresse).")
}
}
document()
document()
library(olympicsWeather)
liste_fonctions <- ls("package:olympicsWeather", all.names = TRUE)
# Affichez la liste des fonctions
print(liste_fonctions)
